var RANGE_PLAYER1 = 'FirstPlayer';
var SHEET_PLAYERS = 'Players';
var SHEET_BRACKETS = 'Brackets';
var CONNECTOR_WIDTH = 15;        // The value must be N-1 where N = Total number of teams

function openMenu() {
      var ss = SpreadsheetApp.getActiveSpreadsheet();
      ss.addMenu('Brackets Maker',[{name: 'Create Brackets', functionName: 'createBrackets';}]
      }

function createBrackets(){
      var ss = SpreadsheetApp.getActiveSpreadsheet();
      var rangePlayers = ss.getRangeByName(PLAYER_1);
      var sheetControl = ss.getRangeByName(SHEET_PLAYERS);
      var sheetResults = ss.getRangeByName(SHEET_BRACKETS);
      
      rangePlayers = players.offset(0,0,sheetControl.getMaxRows() - players.getRowIndex() + 1, 1);
      var players = rangePlayers.getValues();
      
      var numPlayers = 0;
      for (var i=0; i<players.length; i++){
            if(!players[i][0] || players[i][0].length == 0) {
                break;
            }
         numPlayers++;
     
     players = players.slice(0, numPlayers);
     
     // Throws an error if the number of players/teams is more than 512
     if (numPlayers > 512) {
          Broswer.msgBox('Sorry, the limit of entries is restricted to 512 only');
          return;
          }
     
     sheetResults.clear()
     
     var upperPower = Math.ceil(Math.log(numPlayers) / Math.log(2));
     var countNodesUpperBound = Math.pow(2, upperPower);
     var countNodesLowerBound = countNodesUpperBound/2;
     var countNodesHidden = numPlayers - countNodesLowerBound;
     
     var currentPLayer = 0;
     for (var i=0; i< countNodesLowerBound; i++) {
             if (i < countNodesHidden) {
                  var rng = sheetResults.getRange(i * 4 + 1, 1);
                  setBracketItem(rng, players);
                  setBracketItem(rng.offset(2, 0, 1 ,1), players);
                  setConnector(sheetResults, rng.offset(0, 1, 3, 1));
                   } else {
                        setBracketItem(sheetResults.getRange(i * 4 + 2, 3), players);
                        }
                }
      
      upperPower--;
      for (var i=0; i<upperPower; i++) {
            var pow1 = Math.pow(2, i + 1);
            var pow2 = Math.pow(2, i + 2);
            var pow3 = Math.pow(2, i + 3);
         for (var j=0; j<Math.pow(2, upperPower - i - 1); j++){
            setBracketItem(sheetResults.getRange((j * pow3) + pow2, i * 2 + 5));
            setConnector(sheetResults, sheetResults.getRange((j* pow3) + pow1, i * 2 +4, pow2 + 1, 1));
            }
      }
}

function setBracketItem(rng, players) {
      if (players) {
            var random = Math.ceil(Math.random() * players.length);
            rng.setValue(players.splice(random - 1, 1)[0][0]); }
            rng.setBackgroundColor('blue'); }
            
function setConnector(sheet, rng){
      sheet.setColumnWidth(rng.getColumIndex(), CONNECTOR_WIDTH);
      rng.setBackgroundColor('green');}
            
            
